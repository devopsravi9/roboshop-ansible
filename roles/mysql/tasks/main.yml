- name: Fail if the Password MYSQL_PASSWORD does not exist
  ansible.builtin.fail:
    msg: MYSQL_PASSWORD variable is missing.
  when: MYSQL_PASSWORD is undefined

- name: Copy MySQL Repo File
  ansible.builtin.template:
    src: mysql.repo
    dest: /etc/yum.repos.d/mysql.repo

- name: Install MySQL Server
  ansible.builtin.yum:
    name:
    - mysql-community-server
    - MySQL-python
    - python 2.7
    state: installed

- name: Start MySQL Service
  ansible.builtin.systemd:
    name: mysqld
    state: started
    enabled: yes
    daemon_reload: true

- name: Fetch MySQL Log File
  ansible.builtin.slurp:
    src: /var/log/mysqld.log
  register: mysql_log

# here we using some filters

- name: Fetch Password from MySQL LOG File
  ansible.builtin.set_fact:
    DEFAULT_PASSWORD: "{{mysql_log['content'] | b64decode | regex_findall('.*temporary password.*') | join(' ')| split(' ') | last}}"
# too check user & password we use gather mysqll data module. here we try to fetch version of mysql by giving user name and password if we already set password we get response of version otherwise not means we have reset the password

- name: Check MySQL Password has been reset or not
  community.mysql.mysql_info:
    login_user: root
    login_password: "{{MYSQL_PASSWORD}}"
    filter: version
  ignore_errors: yes
  register: mysql_conn

- name: Reset MySQL Password
  ansible.builtin.shell: echo "ALTER USER 'root'@'localhost' IDENTIFIED BY '{{MYSQL_PASSWORD}}';" | mysql --connect-expired-password -uroot -p"{{DEFAULT_PASSWORD}}"
  when: mysql_conn is failed

- name: Check Validate Password Plugins
  ansible.builtin.shell: echo show plugins  | mysql -uroot -p"{{MYSQL_PASSWORD}}" | grep validate_password
  register: plugin_info
  ignore_errors: yes

- name: Remove Validate Password Plugin
  ansible.builtin.shell: echo "uninstall plugin validate_password;" | mysql -uroot -p"{{MYSQL_PASSWORD}}"
  when: plugin_info is succeeded

- name: Download & Extract {{ COMPONENT }} Component Archive
  ansible.builtin.unarchive:
    src: https://github.com/roboshop-devops-project/{{ COMPONENT }}/archive/main.yml.zip
    dest: /tmp
    remote_src: yes

- name: Load Schema
  community.mysql.mysql_db:
    state: import
    name: all
    target: /tmp/mysql-main.yml/shipping.sql
    login_user: root
    login_password: "{{MYSQL_PASSWORD}}"


