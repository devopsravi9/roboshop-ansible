# RINT "setting mongo repo file"
#   curl -s -o /etc/yum.repos.d/mongodb.repo https://raw.githubusercontent.com/roboshop-devops-project/mongodb/main/mongo.repo &>> $LOG
#   CHECKSTAT $?
#
#   PRINT "installing mongod"
#   yum install -y mongodb-org &>> $LOG
#   CHECKSTAT $?
#
#   PRINT "updating listen ip address"
#   sed -i -e 's/127.0.0.1/0.0.0.0/' /etc/mongod.conf &>> $LOG
#   CHECKSTAT $?
#
#   PRINT "enable & start mongod"
#   systemctl enable mongod &>> $LOG && systemctl start mongod &>> $LOG
#   CHECKSTAT $?
#
#   PRINT "download mongod schema files"
#   curl -s -L -o /tmp/mongodb.zip "https://github.com/roboshop-devops-project/mongodb/archive/main.zip" &>> $LOG
#   CHECKSTAT $?
#
#   PRINT "organizing mongod schema files"
#   cd /tmp && unzip -o mongodb.zip  &>> $LOG && cd mongodb-main
#   CHECKSTAT $?
#
#   PRINT "load catlogue & users schema file to mongod"
#   mongo < catalogue.js &>> $LOG &&  mongo < users.js &>> $LOG
#   CHECKSTAT $?
#
#


- name: template a repo file
  ansible.builtin.template:
    src: mongodb_repo
    dest: /etc/yum.repos.d/mongodb.repo

- name: installing mongodb
  ansible.builtin.yum:
    name: mongodb-org
    state: installed

- name: update listen ip address
  ansible.builtin.replace:
    path: /etc/mongod.conf
    regexp: '127.0.0.1'
    replace: '0.0.0.0'

- name: start mongod service
  ansible.builtin.systemd:
    name: mongod
    state: restarted
    enabled: yes

- name: downloading {{ COMPONENT }} component & extracting zip file
  ansible.builtin.unarchive:
    src: https://github.com/roboshop-devops-project/{{ COMPONENT }}/archive/main.zip
    dest: /tmp
    remote_src: yes

- name: load schema
  community.mongodb.mongodb_shell:
    file: "/tmp/mongodb-main/{{item}}"
    idempotent: yes
  loop:
    - catalogue.js
    - users.js





