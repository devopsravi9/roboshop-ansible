- name: Add the user 'roboshop'
  ansible.builtin.user:
    name: roboshop
  register: app_user
  when: COMPONENT != "frontend"

#- name: downloading {{ COMPONENT }} component & extracting zip file
#  ansible.builtin.unarchive:
#    src: https://github.com/roboshop-devops-project/{{ COMPONENT }}/archive/main.yml.zip
#    dest: /home/roboshop
#    remote_src: yes

- name: remove old app content
  ansible.builtin.file:
    path: "{{ APP_LOCATION }}"
    state: "{{item}}"
  loop:
  - absent
  - directory
  when: COMPONENT != "frontend"

#- name: get latest version of {{ COMPONENT }}
#  ansible.builtin.shell:
#    cmd:  curl -s "http://172.31.8.168:8081/service/rest/repository/browse/{{ COMPONENT }}/" | grep zip | grep {{ COMPONENT }}/{{ ENV }}-{{ COMPONENT }} |  sed -e "s/{{ COMPONENT }}-/ /g" -e 's/.zip/ /g' | tail -n1 | awk -F ' ' '{print $3}'
#  register: TAG
#  when: TAG_NAME is undefined
#
#- name: downloading latest {{ COMPONENT }} component & extracting zip file
#  ansible.builtin.unarchive:
#    src: http://172.31.8.168:8081/repository/{{ COMPONENT }}/{{ ENV }}-{{ COMPONENT }}-{{ TAG.stdout }}.zip
#    remote_src: yes
#    dest: "{{APP_LOCATION}}"
#  when: TAG_NAME is undefined
#
#
#- name: downloading {{ COMPONENT }} component & extracting zip file
#  ansible.builtin.unarchive:
#    src: http://172.31.8.168:8081/repository/{{ COMPONENT }}/{{ ENV }}-{{ COMPONENT }}-{{ TAG_NAME }}.zip
#    remote_src: yes
#    dest: "{{APP_LOCATION}}"
#  when: TAG_NAME is defined

- name: unzip {{ COMPONENT }} component from local
  ansible.builtin.unarchive:
    src: "/tmp/{{COMPONENT}}.zip"
    remote_src: yes
    dest: "{{APP_LOCATION}}"




#
#- name: organizing the content
#  ansible.builtin.copy:
#    src: /home/roboshop/{{ COMPONENT }}-main.yml/
#    dest: /home/roboshop/{{ COMPONENT }}
#    remote_src: yes
#    follow: yes




